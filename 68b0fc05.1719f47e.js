(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{296:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return l}));var r=t(2),a=t(9),o=(t(0),t(504)),i={id:"common-mistakes",title:"Common mistakes",sidebar_label:"Common mistakes"},c={id:"version-3.x/common-mistakes",isDocsHomePage:!1,title:"Common mistakes",description:"This section attempts to outline issues that users frequently encounter when first getting accustomed to using React Navigation and serves as a reference in some cases for error messages.",source:"@site/versioned_docs/version-3.x/common-mistakes.md",permalink:"/docs/3.x/common-mistakes",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/source/versioned_docs/version-3.x/common-mistakes.md",version:"3.x",sidebar_label:"Common mistakes",sidebar:"version-3.x-docs",previous:{title:"Glossary of terms",permalink:"/docs/3.x/glossary-of-terms"},next:{title:"Optimize memory usage and performance",permalink:"/docs/3.x/react-native-screens"},latestVersionMainDocPermalink:"/docs/getting-started"},s=[{value:"Explicitly rendering more than one navigator",id:"explicitly-rendering-more-than-one-navigator",children:[]},{value:"Assigning navigationOptions to the wrong component",id:"assigning-navigationoptions-to-the-wrong-component",children:[]},{value:"Wrapping AppContainer in a View without flex",id:"wrapping-appcontainer-in-a-view-without-flex",children:[]}],p={rightToc:s};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This section attempts to outline issues that users frequently encounter when first getting accustomed to using React Navigation and serves as a reference in some cases for error messages."),Object(o.b)("h2",{id:"explicitly-rendering-more-than-one-navigator"},"Explicitly rendering more than one navigator"),Object(o.b)("p",null,"Most apps should only ever render one navigator inside of a React component, and this is usually somewhere near the root component of your app. This is a little bit counter-intuitive at first but it's important for the architecture of React Navigation."),Object(o.b)("p",null,"Here's what you might write in your code -- note that this example would be incorrect:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'export default class App extends React.Component {\n  render() {\n    /* In the root component we are rendering the app navigator */\n    return <AppContainer />;\n  }\n}\n\nconst AuthenticationNavigator = createStackNavigator({\n  SignIn: SignInScreen,\n  ForgotPassword: ForgotPasswordScreen,\n});\n\nconst AuthenticationContainer = createAppContainer(AuthenticationNavigator);\n\nclass AuthenticationScreen extends React.Component {\n  render() {\n    /*\n     * In a screen inside of the navigator we are rendering another navigator\n     * You should avoid this! It will have its own navigation state and be unable\n     * To interact with any parent navigator, eg: it would not know the route "Home" exists\n     */\n    return (\n      <AuthenticationContainer />\n    );\n  }\n}\n\nconst AppNavigator = createSwitchNavigator({\n  Auth: AuthenticationScreen, // This screen renders a navigator!\n  Home: HomeScreen,\n});\n\nconst AppContainer = createAppContainer(AppNavigator)\n')),Object(o.b)("p",null,"The correct way to write this would be the following:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"export default class App extends React.Component {\n  render() {\n    return <AppContainer />;\n  }\n}\n\nconst AuthenticationNavigator = createStackNavigator({\n  SignIn: SignInScreen,\n  ForgotPassword: ForgotPasswordScreen,\n});\n\nconst AppNavigator = createSwitchNavigator({\n  /*\n   * Rather than being rendered by a screen component, the\n   * AuthenticationNavigator is a screen component\n   */\n  Auth: AuthenticationNavigator,\n  Home: HomeScreen,\n});\n\nconst AppContainer = createAppContainer(AppNavigator);\n")),Object(o.b)("p",null,"Alternatively, the following would also work because it exposes the ",Object(o.b)("inlineCode",{parentName:"p"},"router")," static on ",Object(o.b)("inlineCode",{parentName:"p"},"AuthenticationScreen")," and threads through the ",Object(o.b)("inlineCode",{parentName:"p"},"navigation")," prop:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"export default class App extends React.Component {\n  render() {\n    /* In the root component we are rendering the app navigator */\n    return <AppContainer />;\n  }\n}\n\nconst AuthenticationNavigator = createStackNavigator({\n  SignIn: SignInScreen,\n  ForgotPassword: ForgotPasswordScreen,\n});\n\nclass AuthenticationScreen extends React.Component {\n  static router = AuthenticationNavigator.router;\n\n  render() {\n    return (\n      <AuthenticationNavigator navigation={this.props.navigation} />\n    );\n  }\n}\n\nconst AppNavigator = createSwitchNavigator({\n  Auth: AuthenticationScreen, // This screen renders a navigator!\n  Home: HomeScreen,\n});\n\nconst AppContainer = createAppContainer(AppNavigator);\n")),Object(o.b)("h2",{id:"assigning-navigationoptions-to-the-wrong-component"},"Assigning navigationOptions to the wrong component"),Object(o.b)("p",null,"In previous version of React Navigation, the library used to dig through your component tree to find ",Object(o.b)("inlineCode",{parentName:"p"},"navigationOptions"),". This is no longer the case, and only ",Object(o.b)("inlineCode",{parentName:"p"},"navigationOptions")," on screen components of a particular navigator will apply to that navigator. You can read more about this in the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/3.x/navigation-options-resolution"}),"Navigation options resolution")," guide."),Object(o.b)("h2",{id:"wrapping-appcontainer-in-a-view-without-flex"},"Wrapping AppContainer in a View without flex"),Object(o.b)("p",null," If you wrap the ",Object(o.b)("inlineCode",{parentName:"p"},"AppContainer")," in a ",Object(o.b)("inlineCode",{parentName:"p"},"View"),", make sure the ",Object(o.b)("inlineCode",{parentName:"p"},"View")," is using flex."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"import React from 'react';\nimport { Text, View } from 'react-native';\nimport { createBottomTabNavigator, createAppContainer } from 'react-navigation';\n class HomeScreen extends React.Component {\n  render() {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>Home!</Text>\n      </View>\n    );\n  }\n}\n class SettingsScreen extends React.Component {\n  render() {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <Text>Settings!</Text>\n      </View>\n    );\n  }\n}\n const TabNavigator = createBottomTabNavigator({\n  Home: HomeScreen,\n  Settings: SettingsScreen,\n});\n const AppContainer = createAppContainer(TabNavigator)\n // without the style you will see a blank screen\nexport default ()=><View style={{flex: 1}}><AppContainer/></View>;\n")))}l.isMDXComponent=!0},504:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),l=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=l(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=r,d=u["".concat(i,".").concat(m)]||u[m]||g[m]||o;return t?a.a.createElement(d,c(c({ref:n},p),{},{components:t})):a.a.createElement(d,c({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);